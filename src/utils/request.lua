---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhangke200377.
--- DateTime: 2023/8/3 下午9:07
---

local config = require("utils.config")

local _M = {}

-- Sort request uri args
function _M.sort_args(input)
    local args_table = input
    local args_name = {}
    local newargs = {}

    for name, value in pairs(args_table) do
        if type(value) == "table" then
            for k, v in pairs(value) do
                table.insert(newargs, name .. "=" .. value[k])
            end
        else
            table.insert(args_name, name)
        end
    end

    for _, name in ipairs(args_name) do
        -- Lowercase and escape uri
        table.insert(newargs, string.lower(ngx_unescape_uri(name)) .. "=" .. string.lower(ngx_unescape_uri(args_table[name])))
    end

    table.sort(newargs) --Sort the table into order

    local output = table.concat(newargs, "&")

    return output --set the args to be the output
end

function _M.get_path()
    local full_location = ngx.var.uri
    local query_index = string.find(full_location, "?")

    local path

    if query_index then
        path = string.sub(full_location, 1, query_index)
    else
        path = full_location
    end

    return path
end

function _M.get_key()
    local request_arg = _M.sort_args(ngx.req.get_uri_args())

    local key_base = _M.get_path()

    local real_key_base = ngx.encode_base64(table.concat({ key_base, request_arg }, ""), true)

    return table.concat({config.get("CACHE_HEAD", "lucacher"), "-", real_key_base}, "")
end



return _M
